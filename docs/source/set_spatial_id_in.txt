#,Input Name,Input Description
"| 1
| ","| data
| ","| **type:** DataFrame or string
| **default:** -
| **details:** A DataFrame or a string as the address of a CSV file
| The *data* must either include the columns *latitude* and *longitude* (also *depth* 
| if three-diminsional pixelating is considered.) or already contains 
| *spatial ID* column."
"| 2
| ","| column_identifier
| ","| **type:** dict or None
| **default:** None
| **details:** If the input data column names, don’t match
| the specified format we expect,
| (i.e, “longitude”, “latitude”, “depth”, “spatial ID”)
| a dictionary must be passed to specify the content of each column.
| in case of two-diminsional pixelating or kmeans clustering:
| user has to clarify the columns *longitude* and *latitude*.
| in case of three-diminsional pixelating:
| user has to clarify the columns *longitude*, *latitude* and *depth*.
| in other cases:
| user has to clarify the column *spatial ID*.
| The user must specify whether the longitude & latitude or spatial ID column.
| Specifying depth is optional and is only necessary if user
| wants to do three-diminsional pixelating.
|
| **examples:**
| 1.
| {“spatial ID”: “city”}
| 2.
| {“latitude”: “lat”,“longitude”: “lon”}"
"| 3
| ","| pixel_scale
| ","| **type:** list<int>
| **default:** None
| **details:** A list of integers containing two or three elements.
| in case the list contains two elements:
| Longitude (x-axis) will be divided into 'First element value' parts.
| Latitude (y-axis) will be divided into 'Second element value' parts.
| in case the list contains three elements:
| Longitude (x-axis) will be divided into 'First element value' parts.
| Latitude (y-axis) will be divided into 'Second element value' parts.
| Depth (z-axis) will be divided into 'Third element value' parts.
| **examples:**
| 1. (3, 4); the map will be divided into 3*4 pixels.
| 2. (3, 4, 2); the map will be divided into 3*4*2 pixels."
"| 4
| ","| kmeans_clusters
| ","| **type:** int
| **default:** None
| **details:**
| number of clusters if we want to use K-means algorithm to give
| a spatial id for each longitude and latitude."
"| 5
| ","| target_area
| ","| **type:** list<float> or list<int>
| **default:** None
| **details:**
| represent the area that is considered for prediction.
| A four-sized list:
| First element: “max-longitude”,
| Second element:“min-longitude”,
| Third element: “max-latitude”,
| Fourth element: “max-latitude”.
| A six-sized list:
| First element: “max-longitude”,
| Second element:“min-longitude”,
| Third element: “max-latitude”,
| Fourth element: “min-latitude”,
| Fifth element:“max-depth”,
| Sixth element:“min-depth”.
| Latitude and longitude are degree scale.
| -90 <= latitude <= 90, -180 <= longitude <= 180
| **examples:**
| 1. [1.2,1.4,10.31,10.42]
| 2. [1.2,1.4,10.31,10.42, 1,100]"
"| 6
| ","| plot
| ","| **type:** boolean
| **default:** True
| **details:**
| if True it will plot events with their coresponding
| *longitude* & *latitude* along with their spatial ID
| or the subregion they belong and save it.
|"